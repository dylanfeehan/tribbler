// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.29.2
// source: api/tribrpc/tribrpc.proto

package tribrpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateUserArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        *string                `protobuf:"bytes,1,req,name=UserID" json:"UserID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserArgs) Reset() {
	*x = CreateUserArgs{}
	mi := &file_api_tribrpc_tribrpc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserArgs) ProtoMessage() {}

func (x *CreateUserArgs) ProtoReflect() protoreflect.Message {
	mi := &file_api_tribrpc_tribrpc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserArgs.ProtoReflect.Descriptor instead.
func (*CreateUserArgs) Descriptor() ([]byte, []int) {
	return file_api_tribrpc_tribrpc_proto_rawDescGZIP(), []int{0}
}

func (x *CreateUserArgs) GetUserID() string {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return ""
}

type CreateUserReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *int32                 `protobuf:"varint,1,req,name=Status" json:"Status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserReply) Reset() {
	*x = CreateUserReply{}
	mi := &file_api_tribrpc_tribrpc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserReply) ProtoMessage() {}

func (x *CreateUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_tribrpc_tribrpc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserReply.ProtoReflect.Descriptor instead.
func (*CreateUserReply) Descriptor() ([]byte, []int) {
	return file_api_tribrpc_tribrpc_proto_rawDescGZIP(), []int{1}
}

func (x *CreateUserReply) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

type SubscriptionArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        *string                `protobuf:"bytes,1,req,name=UserID" json:"UserID,omitempty"`
	TargetUserID  *string                `protobuf:"bytes,2,req,name=TargetUserID" json:"TargetUserID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscriptionArgs) Reset() {
	*x = SubscriptionArgs{}
	mi := &file_api_tribrpc_tribrpc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscriptionArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionArgs) ProtoMessage() {}

func (x *SubscriptionArgs) ProtoReflect() protoreflect.Message {
	mi := &file_api_tribrpc_tribrpc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionArgs.ProtoReflect.Descriptor instead.
func (*SubscriptionArgs) Descriptor() ([]byte, []int) {
	return file_api_tribrpc_tribrpc_proto_rawDescGZIP(), []int{2}
}

func (x *SubscriptionArgs) GetUserID() string {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return ""
}

func (x *SubscriptionArgs) GetTargetUserID() string {
	if x != nil && x.TargetUserID != nil {
		return *x.TargetUserID
	}
	return ""
}

type SubscriptionReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *int32                 `protobuf:"varint,1,req,name=Status" json:"Status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscriptionReply) Reset() {
	*x = SubscriptionReply{}
	mi := &file_api_tribrpc_tribrpc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscriptionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionReply) ProtoMessage() {}

func (x *SubscriptionReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_tribrpc_tribrpc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionReply.ProtoReflect.Descriptor instead.
func (*SubscriptionReply) Descriptor() ([]byte, []int) {
	return file_api_tribrpc_tribrpc_proto_rawDescGZIP(), []int{3}
}

func (x *SubscriptionReply) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

type GetSubscriptionsArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        *string                `protobuf:"bytes,1,req,name=UserID" json:"UserID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubscriptionsArgs) Reset() {
	*x = GetSubscriptionsArgs{}
	mi := &file_api_tribrpc_tribrpc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubscriptionsArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionsArgs) ProtoMessage() {}

func (x *GetSubscriptionsArgs) ProtoReflect() protoreflect.Message {
	mi := &file_api_tribrpc_tribrpc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionsArgs.ProtoReflect.Descriptor instead.
func (*GetSubscriptionsArgs) Descriptor() ([]byte, []int) {
	return file_api_tribrpc_tribrpc_proto_rawDescGZIP(), []int{4}
}

func (x *GetSubscriptionsArgs) GetUserID() string {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return ""
}

type GetSubscriptionsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *int32                 `protobuf:"varint,1,req,name=Status" json:"Status,omitempty"`
	UserIDs       []string               `protobuf:"bytes,2,rep,name=UserIDs" json:"UserIDs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubscriptionsReply) Reset() {
	*x = GetSubscriptionsReply{}
	mi := &file_api_tribrpc_tribrpc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubscriptionsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionsReply) ProtoMessage() {}

func (x *GetSubscriptionsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_tribrpc_tribrpc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionsReply.ProtoReflect.Descriptor instead.
func (*GetSubscriptionsReply) Descriptor() ([]byte, []int) {
	return file_api_tribrpc_tribrpc_proto_rawDescGZIP(), []int{5}
}

func (x *GetSubscriptionsReply) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *GetSubscriptionsReply) GetUserIDs() []string {
	if x != nil {
		return x.UserIDs
	}
	return nil
}

type PostTribbleArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        *string                `protobuf:"bytes,1,req,name=UserID" json:"UserID,omitempty"`
	Contents      *string                `protobuf:"bytes,2,req,name=Contents" json:"Contents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostTribbleArgs) Reset() {
	*x = PostTribbleArgs{}
	mi := &file_api_tribrpc_tribrpc_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostTribbleArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostTribbleArgs) ProtoMessage() {}

func (x *PostTribbleArgs) ProtoReflect() protoreflect.Message {
	mi := &file_api_tribrpc_tribrpc_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostTribbleArgs.ProtoReflect.Descriptor instead.
func (*PostTribbleArgs) Descriptor() ([]byte, []int) {
	return file_api_tribrpc_tribrpc_proto_rawDescGZIP(), []int{6}
}

func (x *PostTribbleArgs) GetUserID() string {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return ""
}

func (x *PostTribbleArgs) GetContents() string {
	if x != nil && x.Contents != nil {
		return *x.Contents
	}
	return ""
}

type PostTribbleReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *int32                 `protobuf:"varint,1,req,name=Status" json:"Status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostTribbleReply) Reset() {
	*x = PostTribbleReply{}
	mi := &file_api_tribrpc_tribrpc_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostTribbleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostTribbleReply) ProtoMessage() {}

func (x *PostTribbleReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_tribrpc_tribrpc_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostTribbleReply.ProtoReflect.Descriptor instead.
func (*PostTribbleReply) Descriptor() ([]byte, []int) {
	return file_api_tribrpc_tribrpc_proto_rawDescGZIP(), []int{7}
}

func (x *PostTribbleReply) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

type GetTribblesArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        *string                `protobuf:"bytes,1,req,name=UserID" json:"UserID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTribblesArgs) Reset() {
	*x = GetTribblesArgs{}
	mi := &file_api_tribrpc_tribrpc_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTribblesArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTribblesArgs) ProtoMessage() {}

func (x *GetTribblesArgs) ProtoReflect() protoreflect.Message {
	mi := &file_api_tribrpc_tribrpc_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTribblesArgs.ProtoReflect.Descriptor instead.
func (*GetTribblesArgs) Descriptor() ([]byte, []int) {
	return file_api_tribrpc_tribrpc_proto_rawDescGZIP(), []int{8}
}

func (x *GetTribblesArgs) GetUserID() string {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return ""
}

type GetTribblesReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *int32                 `protobuf:"varint,1,req,name=Status" json:"Status,omitempty"`
	Tribbles      []*Tribble             `protobuf:"bytes,2,rep,name=Tribbles" json:"Tribbles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTribblesReply) Reset() {
	*x = GetTribblesReply{}
	mi := &file_api_tribrpc_tribrpc_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTribblesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTribblesReply) ProtoMessage() {}

func (x *GetTribblesReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_tribrpc_tribrpc_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTribblesReply.ProtoReflect.Descriptor instead.
func (*GetTribblesReply) Descriptor() ([]byte, []int) {
	return file_api_tribrpc_tribrpc_proto_rawDescGZIP(), []int{9}
}

func (x *GetTribblesReply) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *GetTribblesReply) GetTribbles() []*Tribble {
	if x != nil {
		return x.Tribbles
	}
	return nil
}

type Tribble struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        *string                `protobuf:"bytes,1,req,name=UserID" json:"UserID,omitempty"`
	PostedTime    *int64                 `protobuf:"varint,2,req,name=PostedTime" json:"PostedTime,omitempty"`
	Contents      *string                `protobuf:"bytes,3,req,name=Contents" json:"Contents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tribble) Reset() {
	*x = Tribble{}
	mi := &file_api_tribrpc_tribrpc_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tribble) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tribble) ProtoMessage() {}

func (x *Tribble) ProtoReflect() protoreflect.Message {
	mi := &file_api_tribrpc_tribrpc_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tribble.ProtoReflect.Descriptor instead.
func (*Tribble) Descriptor() ([]byte, []int) {
	return file_api_tribrpc_tribrpc_proto_rawDescGZIP(), []int{10}
}

func (x *Tribble) GetUserID() string {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return ""
}

func (x *Tribble) GetPostedTime() int64 {
	if x != nil && x.PostedTime != nil {
		return *x.PostedTime
	}
	return 0
}

func (x *Tribble) GetContents() string {
	if x != nil && x.Contents != nil {
		return *x.Contents
	}
	return ""
}

var File_api_tribrpc_tribrpc_proto protoreflect.FileDescriptor

var file_api_tribrpc_tribrpc_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x72, 0x69, 0x62, 0x72, 0x70, 0x63, 0x2f, 0x74, 0x72,
	0x69, 0x62, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x28, 0x0a, 0x0e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x29, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x4e, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x72, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x22, 0x2b, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2e, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x41, 0x72, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x49, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x22, 0x45, 0x0a, 0x0f, 0x50, 0x6f, 0x73, 0x74,
	0x54, 0x72, 0x69, 0x62, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0x2a, 0x0a, 0x10, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x72, 0x69, 0x62, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x29, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x69, 0x62, 0x62, 0x6c, 0x65, 0x73, 0x41, 0x72, 0x67, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x50, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x72, 0x69,
	0x62, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x24, 0x0a, 0x08, 0x54, 0x72, 0x69, 0x62, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x54, 0x72, 0x69, 0x62, 0x62, 0x6c, 0x65, 0x52, 0x08,
	0x54, 0x72, 0x69, 0x62, 0x62, 0x6c, 0x65, 0x73, 0x22, 0x5d, 0x0a, 0x07, 0x54, 0x72, 0x69, 0x62,
	0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x50,
	0x6f, 0x73, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x0a, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x32, 0xa9, 0x03, 0x0a, 0x04, 0x54, 0x72, 0x69, 0x62,
	0x12, 0x31, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0f,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x1a,
	0x10, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x11, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x12, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x3d, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x11, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x12, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x43,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x15, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x72, 0x69, 0x62, 0x62,
	0x6c, 0x65, 0x12, 0x10, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x72, 0x69, 0x62, 0x62, 0x6c, 0x65,
	0x41, 0x72, 0x67, 0x73, 0x1a, 0x11, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x54, 0x72, 0x69, 0x62, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x69, 0x62, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x10, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x69, 0x62, 0x62, 0x6c, 0x65, 0x73, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x11, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x69, 0x62, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x42, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x72, 0x69, 0x62, 0x62, 0x6c, 0x65, 0x73, 0x42, 0x79,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x69, 0x62, 0x62, 0x6c, 0x65, 0x73, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x11,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x69, 0x62, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x64, 0x79, 0x6c, 0x61, 0x6e, 0x66, 0x65, 0x65, 0x68, 0x61, 0x6e, 0x2f, 0x74, 0x72,
	0x69, 0x62, 0x62, 0x6c, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x72, 0x69, 0x62, 0x72,
	0x70, 0x63,
}

var (
	file_api_tribrpc_tribrpc_proto_rawDescOnce sync.Once
	file_api_tribrpc_tribrpc_proto_rawDescData = file_api_tribrpc_tribrpc_proto_rawDesc
)

func file_api_tribrpc_tribrpc_proto_rawDescGZIP() []byte {
	file_api_tribrpc_tribrpc_proto_rawDescOnce.Do(func() {
		file_api_tribrpc_tribrpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_tribrpc_tribrpc_proto_rawDescData)
	})
	return file_api_tribrpc_tribrpc_proto_rawDescData
}

var file_api_tribrpc_tribrpc_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_tribrpc_tribrpc_proto_goTypes = []any{
	(*CreateUserArgs)(nil),        // 0: CreateUserArgs
	(*CreateUserReply)(nil),       // 1: CreateUserReply
	(*SubscriptionArgs)(nil),      // 2: SubscriptionArgs
	(*SubscriptionReply)(nil),     // 3: SubscriptionReply
	(*GetSubscriptionsArgs)(nil),  // 4: GetSubscriptionsArgs
	(*GetSubscriptionsReply)(nil), // 5: GetSubscriptionsReply
	(*PostTribbleArgs)(nil),       // 6: PostTribbleArgs
	(*PostTribbleReply)(nil),      // 7: PostTribbleReply
	(*GetTribblesArgs)(nil),       // 8: GetTribblesArgs
	(*GetTribblesReply)(nil),      // 9: GetTribblesReply
	(*Tribble)(nil),               // 10: Tribble
}
var file_api_tribrpc_tribrpc_proto_depIdxs = []int32{
	10, // 0: GetTribblesReply.Tribbles:type_name -> Tribble
	0,  // 1: Trib.CreateUser:input_type -> CreateUserArgs
	2,  // 2: Trib.AddSubscription:input_type -> SubscriptionArgs
	2,  // 3: Trib.RemoveSubscription:input_type -> SubscriptionArgs
	4,  // 4: Trib.GetSubscriptions:input_type -> GetSubscriptionsArgs
	6,  // 5: Trib.PostTribble:input_type -> PostTribbleArgs
	8,  // 6: Trib.GetTribbles:input_type -> GetTribblesArgs
	8,  // 7: Trib.GetTribblesBySubscription:input_type -> GetTribblesArgs
	1,  // 8: Trib.CreateUser:output_type -> CreateUserReply
	3,  // 9: Trib.AddSubscription:output_type -> SubscriptionReply
	3,  // 10: Trib.RemoveSubscription:output_type -> SubscriptionReply
	5,  // 11: Trib.GetSubscriptions:output_type -> GetSubscriptionsReply
	7,  // 12: Trib.PostTribble:output_type -> PostTribbleReply
	9,  // 13: Trib.GetTribbles:output_type -> GetTribblesReply
	9,  // 14: Trib.GetTribblesBySubscription:output_type -> GetTribblesReply
	8,  // [8:15] is the sub-list for method output_type
	1,  // [1:8] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_api_tribrpc_tribrpc_proto_init() }
func file_api_tribrpc_tribrpc_proto_init() {
	if File_api_tribrpc_tribrpc_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_tribrpc_tribrpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_tribrpc_tribrpc_proto_goTypes,
		DependencyIndexes: file_api_tribrpc_tribrpc_proto_depIdxs,
		MessageInfos:      file_api_tribrpc_tribrpc_proto_msgTypes,
	}.Build()
	File_api_tribrpc_tribrpc_proto = out.File
	file_api_tribrpc_tribrpc_proto_rawDesc = nil
	file_api_tribrpc_tribrpc_proto_goTypes = nil
	file_api_tribrpc_tribrpc_proto_depIdxs = nil
}
